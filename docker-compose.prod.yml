version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: soccer_analytics_db_prod
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-soccer_analytics}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - soccer_analytics_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: soccer_analytics_app_prod
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-soccer_analytics}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-soccer_analytics}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - FOOTBALL_DATA_API_KEY=${FOOTBALL_DATA_API_KEY:-demo_key}
      - DEBUG=${DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    ports:
      - "${STREAMLIT_PORT:-8501}:8501"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - soccer_analytics_network
    command: ["/wait-for-postgres.sh", "postgres", "streamlit", "run", "streamlit_app.py", "--server.port=8501", "--server.address=0.0.0.0"]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  scheduler:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: soccer_analytics_scheduler
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-soccer_analytics}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-soccer_analytics}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - FOOTBALL_DATA_API_KEY=${FOOTBALL_DATA_API_KEY:-demo_key}
      - DEBUG=${DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      app:
        condition: service_started
    restart: unless-stopped
    networks:
      - soccer_analytics_network
    command: ["/wait-for-postgres.sh", "postgres", "python", "/app/scripts/production_scheduler.py"]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  health_monitor:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: soccer_analytics_health_monitor
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-soccer_analytics}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-soccer_analytics}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - FOOTBALL_DATA_API_KEY=${FOOTBALL_DATA_API_KEY:-demo_key}
      - DEBUG=${DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - soccer_analytics_network
    command: >
      sh -c "
        /wait-for-postgres.sh postgres &&
        while true; do
          python /app/scripts/health_check.py --json > /app/logs/health_$(date +%Y%m%d_%H%M%S).json;
          sleep 300;
        done
      "
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    image: nginx:alpine
    container_name: soccer_analytics_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - soccer_analytics_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data_prod:
    driver: local

networks:
  soccer_analytics_network:
    driver: bridge 