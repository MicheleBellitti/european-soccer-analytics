services:
  postgres:
    image: postgres:15-alpine
    container_name: soccer_analytics_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-soccer_analytics}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - soccer_analytics_network

  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: soccer_analytics_app
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-soccer_analytics}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-soccer_analytics}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - FOOTBALL_DATA_API_KEY=${FOOTBALL_DATA_API_KEY:-demo_key}
      - DEBUG=${DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    ports:
      - "${STREAMLIT_PORT:-8501}:8501"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - soccer_analytics_network
    command: ["/wait-for-postgres.sh", "postgres", "streamlit", "run", "streamlit_app.py", "--server.port=8501", "--server.address=0.0.0.0"]

volumes:
  postgres_data:
    driver: local

networks:
  soccer_analytics_network:
    driver: bridge 